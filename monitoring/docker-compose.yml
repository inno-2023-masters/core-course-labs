version: "3.8"

networks:
  loki:

services:
  # Python app
  app-python:
    image: iskanred/app_python:1.0.0
    container_name: app-python
    ports:
      - "80:8080"
    volumes:
      - "./output/app_python_visit/:/app_python/visits_dir"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health"]
      timeout: 10s
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 250m
    logging: &logging
      driver: "json-file"
      options:
        max-size: "100m"
        # --log-opt tag="{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
        tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'
    networks:
      - loki

  # Kotlin app
  app-kotlin:
    image: iskanred/app_kotlin:1.0.0
    # Container name must not have underscores since
    # Apache Tomcat cannot work with hostnames that contain underscores
    container_name: app-kotlin
    ports:
      - "8080:8080"
    volumes:
      - "./output/app_kotlin_visits/:/app_kotlin/visits_dir"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 450m
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health"]
      timeout: 10s
      start_period: 10s
    logging: *logging
    networks:
      - loki

  # Loki
  loki:
    image: grafana/loki:2.9.1
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    healthcheck:
      test: ["CMD-SHELL", "wget -q --tries=1 --spider http://localhost:3100/ready || exit 1"]
      timeout: 10s
      start_period: 1m
    deploy:
      resources:
        limits:
          memory: 250m
    logging: *logging
    networks:
      - loki

  # Promtail
  promtail:
    image: grafana/promtail:2.9.1
    container_name: promtail
    volumes:
      - "./config/promtail.yaml:/etc/promtail/promtail.yaml:ro"
      - "/var/lib/docker/containers:/var/lib/docker/containers:ro"
    command: -config.file=/etc/promtail/promtail.yaml
    healthcheck:
      test: ["CMD-SHELL", "bash -c 'cat < /dev/null > /dev/tcp/localhost/9080' || exit 1"]
      timeout: 30s
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 200m
    logging: *logging
    networks:
      - loki

  # Grafana
  grafana:
    image: grafana/grafana:10.1.4
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - "./config/grafana/provisioning:/etc/grafana/provisioning:ro"
      - "./config/grafana/dashboards:/var/lib/grafana/dashboards"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000"]
      timeout: 10s
      start_period: 15s
    deploy:
      resources:
        limits:
          memory: 750m
    logging: *logging
    networks:
      - loki

  # Prometheus
  prometheus:
    image: prom/prometheus:v2.47.2
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - "./config/prometheus.yml:/etc/prometheus/prometheus-config.yml"
    command:
      - "--config.file=/etc/prometheus/prometheus-config.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
    healthcheck:
      test: ["CMD-SHELL", "wget -q --tries=1 --spider http://localhost:9090/status || exit 1"]
      timeout: 10s
      start_period: 15s
    deploy:
      resources:
        limits:
          memory: 750m
    logging: *logging
    networks:
      - loki
